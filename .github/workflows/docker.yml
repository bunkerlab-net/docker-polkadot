name: Docker

on:
  workflow_dispatch:
  workflow_call:
    outputs:
      version:
        description: The version of the image
        value: ${{ jobs.push.outputs.version }}

permissions: {}

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            runs-on: blacksmith-8vcpu-ubuntu-2204
          - arch: arm64
            runs-on: blacksmith-8vcpu-ubuntu-2204-arm
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
        with:
          cache-binary: false
          install: true
          version: latest
      - name: Build
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          platforms: linux/${{ matrix.arch }}
          push: false
          cache-from: |
            type=gha,scope=docker-build-${{ matrix.arch }}
          cache-to: |
            type=gha,mode=min,scope=docker-build-${{ matrix.arch }}
          context: .
          build-args: >-
            ${{ github.event_name == 'release' && format('VERSION={0}', github.ref_name) || '' }}

  push:
    name: Push
    needs: build
    runs-on: ubuntu-latest
    permissions:
      packages: write
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
        with:
          cache-binary: false
          install: true
          version: latest
      - name: Check if release is latest
        if: github.event_name == 'release'
        id: check_latest
        run: |
          RELEASE_ID=$(curl -s -H "Authorization: Bearer ${{ github.token }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest" \
            | jq -r '.id')
          echo "is_latest=$([[ "$RELEASE_ID" == "$CURRENT_RELEASE_ID" ]] && echo "true" || echo "false")" >> $GITHUB_OUTPUT
        env:
          CURRENT_RELEASE_ID: ${{ github.event.release.id }}
      - uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        id: meta
        with:
          images: ghcr.io/${{ github.repository_owner }}/polkadot
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ github.event_name == 'release' && steps.check_latest.outputs.is_latest == 'true' }}
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
      - name: Package and Push
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: |
            type=gha,scope=docker-build-amd64
            type=gha,scope=docker-build-arm64
          context: .
          build-args: >-
            ${{ github.event_name == 'release' && format('VERSION={0}', github.ref_name) || '' }}
